openapi: 3.0.3
info:
  title: Music info
  version: 0.0.1
servers:
- url: https://songs.swagger.io/api/v1
paths:
  /info:
    delete:
      parameters:
      - explode: true
        in: query
        name: group
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: song
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Song deleted successfully
        "400":
          description: Bad request
        "404":
          description: Song not found
        "500":
          description: Internal server error
      summary: Delete an existing song
    get:
      parameters:
      - explode: true
        in: query
        name: group
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: song
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongDetail'
          description: Ok
        "400":
          description: Bad request
        "500":
          description: Internal server error
      summary: Get song details
    post:
      parameters:
      - explode: true
        in: query
        name: group
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: song
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SongDetail'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongDetail'
          description: Song created successfully
        "400":
          description: Bad request
        "500":
          description: Internal server error
      summary: Create a new song
    put:
      parameters:
      - explode: true
        in: query
        name: group
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: song
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SongDetail'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongDetail'
          description: Song updated successfully
        "400":
          description: Bad request
        "404":
          description: Song not found
        "500":
          description: Internal server error
      summary: Update an existing song
components:
  schemas:
    SongDetail:
      example:
        releaseDate: 16.07.2006
        link: https://www.youtube.com/watch?v=Xsp3_a-PMTw
        text: |
          Ooh baby, don't you know I suffer?
          Ooh baby, can you hear me moan?
          You caught me under false pretenses
          How long before you let me go?

          Ooh
          You set my soul alight
          Ooh
          You set my soul alight
      properties:
        releaseDate:
          example: 16.07.2006
          type: string
        text:
          example: |
            Ooh baby, don't you know I suffer?
            Ooh baby, can you hear me moan?
            You caught me under false pretenses
            How long before you let me go?

            Ooh
            You set my soul alight
            Ooh
            You set my soul alight
          type: string
        link:
          example: https://www.youtube.com/watch?v=Xsp3_a-PMTw
          type: string
      required:
      - link
      - releaseDate
      - text
      type: object
